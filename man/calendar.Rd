% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frame-calendar.R
\name{frame_calendar}
\alias{frame_calendar}
\alias{prettify}
\title{Build a calendar view for a time series data frame}
\usage{
frame_calendar(data, x, y, date, calendar = "monthly", dir = "h",
  sunday = FALSE, nrow = NULL, ncol = NULL, polar = FALSE,
  scale = "global")

prettify(plot, ...)
}
\arguments{
\item{data}{A data frame.}

\item{x, y}{Variables to be passed to \code{ggplot2(aes(x, y))}.}

\item{date}{A variable of date-times that helps to tell the days in the
calendar.}

\item{calendar}{Character. Type of calendar.}

\item{dir}{Direction: "h" for horizontal (the default) or "v" for vertical.}

\item{sunday}{Logical. FALSE (the default) for starting the weekday as Monday
in the monthly calendar, or TRUE for Sunday.}

\item{nrow, ncol}{Integer. Number of rows and columns for the calendar layout.}

\item{polar}{Logical. Cartesian (FALSE, the default) or polar (TRUE) coordinates.}

\item{scale}{"global" (the default) for scaling globally, or "local" for scaling}

\item{plot}{ggplot object}

\item{...}{Extra arguments passed to geom_label and geom_text}
}
\value{
A data frame with newly added columns of \code{.x}, \code{.y}, and
\code{.group_id}
}
\description{
A calendar view is useful to visualise time series at daily intervals
or higher frequency levels. \code{frame_calendar} sets up the calendar
layout for the input data frame, and the results is ready for \code{ggplot2}.
Each row represents a week and the first cell in the row indicates Mondays.
}
\details{
Calendar view is a special ordered layout that \code{ggplot2::facet_grid}
and \code{ggplot2::facet_wrap} currently do not support. This creates new
coordinates of \code{(.x, .y)} to place to the correct panel in the calendar
and new grouped sequence of \code{.group_id} from \code{date} using some
linear algebra.
}
\examples{
   library(dplyr)
   # get the calendar layout for the data frame
   ped_calendar <- pedestrian \%>\%
     filter(Sensor_ID == 13) \%>\% 
     mutate(Time = lubridate::hour(Date_Time)) \%>\% 
     frame_calendar(x = Time, y = Hourly_Counts, date = Date_Time,
       nrow = 3, ncol = 4)

   # plot
   library(ggplot2)
   ped_calendar \%>\% 
     ggplot(aes(x = .x, y = .y, group = .group_id)) +
     geom_line()
   prettify()

}
\author{
Earo Wang
}
