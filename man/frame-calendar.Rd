% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frame-calendar.R
\name{frame_calendar}
\alias{frame_calendar}
\alias{prettify}
\title{Rearrange a temporal data frame to a calendar-based data format using
linear algebra}
\usage{
frame_calendar(data, x, y, date, calendar = "monthly", dir = "h",
  sunday = FALSE, nrow = NULL, ncol = NULL, polar = FALSE,
  scale = "fixed")

prettify(plot, label = c("label", "text"), ...)
}
\arguments{
\item{data}{A data frame or a tibble including a \code{Date} variable.}

\item{x}{A variable mapping to time of day.}

\item{y}{A variable mapping to value.}

\item{date}{A \code{Date} variable mapping to dates in the calendar.}

\item{calendar}{Type of calendar. "monthly" calendar (the default) organises
the \code{data} to a common format comprised of day of week in the column and
week of month in the row. "weekly" calendar consists of day of week and
week of year. "daily" calendar refers to day of month and month of year.}

\item{dir}{Direction of calendar: "h" for horizontal (the default) or "v" for
vertical.}

\item{sunday}{FALSE (the default) indicating to starting with Monday in a
week, or TRUE for Sunday, when \code{calendar = "monthly"}.}

\item{nrow, ncol}{Number of rows and columns defined for "monthly" calendar
layout.}

\item{polar}{FALSE (the default) for Cartesian or TRUE for polar coordinates.}

\item{scale}{"fixed" (the default) for fixed scale. "free" for scaling
conditional on each daily cell, "free_wday" for scaling on weekdays,
"free_mday" for scaling on day of month.}

\item{plot}{ggplot object}

\item{label}{If "label" is specified, it will add month/week text on the
\code{ggplot} object, which is actually passed to \code{geom_label}. If "text" is
specified, it will add weekday/day of month text on the \code{ggplot} object,
which is actually passed to \code{geom_text}. By default, both "label" and
"text" are used.}

\item{...}{Extra arguments passed to geom_label and geom_text}
}
\value{
A data frame or a tibble with newly added columns of \code{.x}, \code{.y}. \code{.x}
and \code{.y} together give new coordinates computed for different types of
calendars. \code{.group_id} groups the same dates in a chronological order. The
basic use is \code{ggplot(aes(x = .x, y = .y, group = date)) + geom_*}. The
variable names \code{.x} and \code{.y} reflect the actual \code{x} and \code{y} with a padded
\code{.} in front.
}
\description{
Temporal data of daily intervals or higher frequency levels can
be organised into a calendar-based format, which is useful for visually
presenting calendar-related activities or multiple seasonality (such as
time of day, day of week, day of month). The function only returns a
rearranged data frame, and \code{ggplot2} takes care of the plotting afterwards.
It allows more flexibility for users to visualise the data in various ways.
}
\details{
The calendar-based graphic can be considered as small multiples
of sub-series arranged into many daily cells. For every multiple (or
facet), it requires the \code{x} variable mapped to be time of day and \code{y} to
value. New \code{x} and \code{y} are computed and named with a leading \code{.} according
to \code{x} and \code{y} respectively, and get ready for \code{ggplot2} aesthetic mappings.
}
\examples{
   library(dplyr)
   # compute the calendar layout for the data frame
   calendar_df <- pedestrian \%>\%
     filter(Sensor_ID == 13) \%>\% 
     frame_calendar(x = Time, y = Hourly_Counts, date = Date, nrow = 4)

   # ggplot
   p1 <- calendar_df \%>\% 
     ggplot(aes(x = .Time, y = .Hourly_Counts, group = Date)) +
     geom_line()
   prettify(p1)
   
   # use in conjunction with group_by()
   grped_calendar <- pedestrian \%>\% 
     filter(Year == "2017", Month == "March") \%>\% 
     group_by(Sensor_Name) \%>\% 
     frame_calendar(
       x = Time, y = Hourly_Counts, date = Date, sunday = TRUE
     )
   
   p2 <- grped_calendar \%>\% 
     ggplot(aes(x = .Time, y = .Hourly_Counts, group = Date)) +
     geom_line() +
     facet_wrap(~ Sensor_Name, nrow = 2)
   prettify(p2, label = "text")
}
\author{
Earo Wang
}
